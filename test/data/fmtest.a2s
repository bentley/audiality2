def title	"FMTest"
def version	"1.0"
def description	"Test of the 'fm1' through 'fm4' oscillator units"
def author	"David Olofson"
def copyright	"Copyright 2014, 2016 David Olofson"
def license	"Public domain. Do what you like with it. NO WARRANTY!"
def a2sversion	"1.9"

import bassline;
import chords;


// Various FM bass sounds

FMBass1(P V=1 M=1)
{
	struct { fm2; panmix }
	@a V;	@a1 (M * 4)
	@p P;	@p1 0;
	*a .7;	*a1 .4;	d 10
	*a .7;	*a1 .7;	d 40
	*a .7;	*a1 .8;	d 70
	a 0;	*a1 .9;	d 100
	end
.rel	a 0;	a1 .7;	d 50
	d 100
	1() { force rel }
}

FMBass2(P V=1 M=1)
{
	struct { fm2; panmix }
	@a (V * .8);	@a1 (M * 4)
	@p (P - .05);	@p1 .05
	@fb .5;		@fb1 .3
	*a .7;	*a1 .7;	d 20
	*a .7;	*a1 .8;	d 30
	*a .7;	*a1 .85;d 60
	a 0;	*a1 .9;	d 100
	end
.rel	a 0;	a1 .7;	d 50
	d 100
	1() { force rel }
}

FMBass3(P V=1 M=1)
{
	struct { fm2; panmix }
	@a (V * .7);	@a1 (M * 7)
	@p (P - .05);	@p1 (1 + 7n + .05)
	*a .7;	*a1 .4;	d 10
	*a .7;	*a1 .7;	d 40
	*a .7;	*a1 .8;	d 70
	a 0;	*a1 .9;	d 100
	end
.rel	a 0;	a1 0;	d 50
	d 100
	1() { force rel }
}

FMBass4(P V=1 M=1)
{
	struct { fm2; panmix }
	@a (V * .6);	@a1 (M * 3)
	@p (P + 1);	@p1 3
	@fb .9;		@fb1 (M * .4)
	30 {
		*a .99
		*a1 .99
		*p1 .95
		d 1
	}
	50 {
		*a .995
		*a1 .99
		*p1 .85
		d 2
	}
	a 0; *a1 .8; d 100
	end
.rel	a 0;	a1 0;	d 50
	d 100
	1() { force rel }
}


// Some FM pads

FMPad1(P V=1)
{
	struct { fm3; panmix }
	@p P; @p1 1.001; @p2 1.999
	@fb .5;		@fb2 .4
	
	a V;		a2 .1;	fb .1; fb1 .1; fb2 .2;	d 300
		a1 .2; 	a2 .2;	fb .3; fb1 .2; fb2 .1;	d 700
							d 500
	*fb .7;	*fb1 .7; *fb2 .7;			d 2000
	end
.rel	a 0; fb 0;					d 2000
	d 10
	1() { force rel }
}

FMPad2(P V=1)
{
	struct { fm4; panmix }
	p P; fb .5
	p1 1.001
	p2 1.997; fb2 .3
	p3 3.005; a3 .3
	set
	
	a V; a1 .2; a2 .3; fb .3; fb1 .4; fb2 .5;	d 500
	*fb .7;	*fb1 .7; *fb2 .7; *a3 .3;		d 2000
	end
.rel	a 0; fb 0;					d 2000
	d 10
	1() { force rel }
}


Track()
{
	struct {
		inline 0 *
		fbdelay D * *
		fbdelay D2 * >
	}

	D.fbdelay (tick * 5.05);	D.fbgain .05
	D.ldelay (tick * 6.05);		D.lgain .05
	D.rdelay (tick * 8.03);		D.rgain .05
	D2.fbdelay (tick * 6.95);	D2.fbgain .05
	D2.ldelay (tick * 9.01);	D2.lgain .05
	D2.rdelay (tick * 11.03);	D2.rgain .05
	set

	Bassline FMBass1;	td 32
	Bassline FMBass2;	td 32
	Chords FMPad1 .3;	td 64
	Bassline FMBass3;	td 32
	Bassline FMBass4;	td 32
	Chords FMPad2 .3;	td 64

	d 5000
}

export Song(P V=1 L=0)
{
	struct {
		inline 0 *
		fbdelay D * *
		panmix PM * >
	}

	tempo 120 4
	D.fbdelay 119;	D.fbgain .03
	D.ldelay 67;	D.lgain .02
	D.rdelay 97;	D.rgain .01
	PM.vol .6
	set

	tr P
	for {
		Track;		td (32 * 4)
				td (64 * 2)
		ifz L {
			d 5000
			end
		}
	}

	end

.stop	10 {
		*PM.vol .7
		d 100
	}
	PM.vol 0;	d 100
	kill

	1() {
		force stop
	}
}
